{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Downloads\\\\New folder (3)\\\\frontend\\\\src\\\\components\\\\ChatInterface.tsx\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Box, Container, Paper, TextField, IconButton, Typography, List, ListItem, Avatar, Chip, Fab, CircularProgress, Alert, Grid } from '@mui/material';\nimport { Send as SendIcon, Mic as MicIcon, MicOff as MicOffIcon, SmartToy as BotIcon, Person as PersonIcon, VolumeUp as SpeakerIcon } from '@mui/icons-material';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport ChatService from '../services/ChatService';\nimport VoiceService from '../services/VoiceService';\nimport './ChatInterface.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatInterface = () => {\n  const [messages, setMessages] = useState([]);\n  const [inputText, setInputText] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [isListening, setIsListening] = useState(false);\n  const [error, setError] = useState(null);\n  const messagesEndRef = useRef(null);\n  const {\n    speak,\n    cancel\n  } = useSpeechSynthesis();\n  useEffect(() => {\n    // Initial greeting\n    const initialMessage = {\n      id: '1',\n      text: \"Hello! I'm your Barclays Virtual Assistant. I can help you with account inquiries, transactions, appointments, and financial advice. How can I assist you today?\",\n      sender: 'bot',\n      timestamp: new Date(),\n      suggestions: [\"Check my account balance\", \"View recent transactions\", \"Book an appointment\", \"Get financial advice\"]\n    };\n    setMessages([initialMessage]);\n  }, []);\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  const sendMessage = async text => {\n    if (!text.trim()) return;\n    const userMessage = {\n      id: Date.now().toString(),\n      text: text.trim(),\n      sender: 'user',\n      timestamp: new Date()\n    };\n    setMessages(prev => [...prev, userMessage]);\n    setInputText('');\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await ChatService.sendMessage(text);\n      const botMessage = {\n        id: (Date.now() + 1).toString(),\n        text: response.message,\n        sender: 'bot',\n        timestamp: new Date(),\n        suggestions: response.suggestions,\n        intent: response.intent,\n        confidence: response.confidence\n      };\n      setMessages(prev => [...prev, botMessage]);\n\n      // Text-to-speech for bot response\n      if (response.message) {\n        speak({\n          text: response.message\n        });\n      }\n    } catch (error) {\n      console.error('Error sending message:', error);\n      setError('Sorry, I encountered an error. Please try again.');\n      const errorMessage = {\n        id: (Date.now() + 1).toString(),\n        text: \"I'm sorry, I encountered an error processing your request. Please try again.\",\n        sender: 'bot',\n        timestamp: new Date()\n      };\n      setMessages(prev => [...prev, errorMessage]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleVoiceInput = async () => {\n    if (isListening) {\n      VoiceService.stopListening();\n      setIsListening(false);\n      return;\n    }\n    try {\n      setIsListening(true);\n      const transcript = await VoiceService.startListening();\n      if (transcript) {\n        await sendMessage(transcript);\n      }\n    } catch (error) {\n      console.error('Voice input error:', error);\n      setError('Voice input failed. Please try typing instead.');\n    } finally {\n      setIsListening(false);\n    }\n  };\n  const handleSuggestionClick = suggestion => {\n    sendMessage(suggestion);\n  };\n  const handleKeyPress = event => {\n    if (event.key === 'Enter' && !event.shiftKey) {\n      event.preventDefault();\n      sendMessage(inputText);\n    }\n  };\n  const speakMessage = text => {\n    cancel(); // Stop any current speech\n    speak({\n      text\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"md\",\n    sx: {\n      height: '100vh',\n      display: 'flex',\n      flexDirection: 'column',\n      py: 2\n    },\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      sx: {\n        flex: 1,\n        display: 'flex',\n        flexDirection: 'column',\n        overflow: 'hidden'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          p: 2,\n          borderBottom: 1,\n          borderColor: 'divider',\n          bgcolor: 'primary.main',\n          color: 'white'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          sx: {\n            display: 'flex',\n            alignItems: 'center',\n            gap: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(BotIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 13\n          }, this), \"Barclays Virtual Assistant\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          sx: {\n            opacity: 0.8\n          },\n          children: \"Powered by AI \\u2022 Available 24/7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"error\",\n        onClose: () => setError(null),\n        sx: {\n          m: 1\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          flex: 1,\n          overflow: 'auto',\n          p: 1\n        },\n        children: /*#__PURE__*/_jsxDEV(List, {\n          children: [/*#__PURE__*/_jsxDEV(AnimatePresence, {\n            children: messages.map(message => /*#__PURE__*/_jsxDEV(motion.div, {\n              initial: {\n                opacity: 0,\n                y: 20\n              },\n              animate: {\n                opacity: 1,\n                y: 0\n              },\n              exit: {\n                opacity: 0,\n                y: -20\n              },\n              transition: {\n                duration: 0.3\n              },\n              children: /*#__PURE__*/_jsxDEV(ListItem, {\n                sx: {\n                  flexDirection: 'column',\n                  alignItems: message.sender === 'user' ? 'flex-end' : 'flex-start',\n                  mb: 1\n                },\n                children: [/*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    display: 'flex',\n                    alignItems: 'flex-start',\n                    gap: 1,\n                    maxWidth: '80%',\n                    flexDirection: message.sender === 'user' ? 'row-reverse' : 'row'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Avatar, {\n                    sx: {\n                      bgcolor: message.sender === 'user' ? 'secondary.main' : 'primary.main',\n                      width: 32,\n                      height: 32\n                    },\n                    children: message.sender === 'user' ? /*#__PURE__*/_jsxDEV(PersonIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 224,\n                      columnNumber: 54\n                    }, this) : /*#__PURE__*/_jsxDEV(BotIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 224,\n                      columnNumber: 71\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 217,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Paper, {\n                    elevation: 1,\n                    sx: {\n                      p: 2,\n                      bgcolor: message.sender === 'user' ? 'secondary.light' : 'grey.100',\n                      borderRadius: 2,\n                      position: 'relative'\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"body1\",\n                      sx: {\n                        whiteSpace: 'pre-wrap'\n                      },\n                      children: message.text\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 236,\n                      columnNumber: 25\n                    }, this), message.sender === 'bot' && /*#__PURE__*/_jsxDEV(IconButton, {\n                      size: \"small\",\n                      onClick: () => speakMessage(message.text),\n                      sx: {\n                        position: 'absolute',\n                        top: 4,\n                        right: 4\n                      },\n                      children: /*#__PURE__*/_jsxDEV(SpeakerIcon, {\n                        fontSize: \"small\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 246,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 241,\n                      columnNumber: 27\n                    }, this), message.intent && message.confidence && /*#__PURE__*/_jsxDEV(Box, {\n                      sx: {\n                        mt: 1\n                      },\n                      children: /*#__PURE__*/_jsxDEV(Chip, {\n                        label: `${message.intent} (${(message.confidence * 100).toFixed(0)}%)`,\n                        size: \"small\",\n                        color: message.confidence > 0.7 ? 'success' : 'warning'\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 253,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 252,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"caption\",\n                      color: \"text.secondary\",\n                      sx: {\n                        display: 'block',\n                        mt: 0.5\n                      },\n                      children: message.timestamp.toLocaleTimeString()\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 261,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 227,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 208,\n                  columnNumber: 21\n                }, this), message.suggestions && message.suggestions.length > 0 && /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    mt: 1,\n                    maxWidth: '80%'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"caption\",\n                    color: \"text.secondary\",\n                    sx: {\n                      mb: 1,\n                      display: 'block'\n                    },\n                    children: \"Quick suggestions:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 270,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    container: true,\n                    spacing: 0.5,\n                    children: message.suggestions.map((suggestion, index) => /*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      children: /*#__PURE__*/_jsxDEV(Chip, {\n                        label: suggestion,\n                        size: \"small\",\n                        onClick: () => handleSuggestionClick(suggestion),\n                        sx: {\n                          cursor: 'pointer'\n                        },\n                        variant: \"outlined\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 276,\n                        columnNumber: 31\n                      }, this)\n                    }, index, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 275,\n                      columnNumber: 29\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 273,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 269,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 19\n              }, this)\n            }, message.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, this), isLoading && /*#__PURE__*/_jsxDEV(ListItem, {\n            sx: {\n              justifyContent: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n              size: 24\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              sx: {\n                ml: 1\n              },\n              children: \"Assistant is typing...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: messagesEndRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          p: 2,\n          borderTop: 1,\n          borderColor: 'divider'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            gap: 1,\n            alignItems: 'flex-end'\n          },\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            multiline: true,\n            maxRows: 4,\n            value: inputText,\n            onChange: e => setInputText(e.target.value),\n            onKeyPress: handleKeyPress,\n            placeholder: \"Type your message or ask about your account...\",\n            variant: \"outlined\",\n            size: \"small\",\n            disabled: isLoading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n            color: \"primary\",\n            onClick: () => sendMessage(inputText),\n            disabled: !inputText.trim() || isLoading,\n            children: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Fab, {\n            size: \"small\",\n            color: isListening ? \"secondary\" : \"primary\",\n            onClick: handleVoiceInput,\n            disabled: isLoading,\n            children: isListening ? /*#__PURE__*/_jsxDEV(MicOffIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 30\n            }, this) : /*#__PURE__*/_jsxDEV(MicIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 47\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 11\n        }, this), isListening && /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"caption\",\n          color: \"secondary\",\n          sx: {\n            mt: 1,\n            display: 'block',\n            textAlign: 'center'\n          },\n          children: \"\\uD83C\\uDFA4 Listening... Click mic to stop\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 169,\n    columnNumber: 5\n  }, this);\n};\nexport default ChatInterface;","map":{"version":3,"names":["React","useState","useEffect","useRef","Box","Container","Paper","TextField","IconButton","Typography","List","ListItem","Avatar","Chip","Fab","CircularProgress","Alert","Grid","Send","SendIcon","Mic","MicIcon","MicOff","MicOffIcon","SmartToy","BotIcon","Person","PersonIcon","VolumeUp","SpeakerIcon","motion","AnimatePresence","ChatService","VoiceService","jsxDEV","_jsxDEV","ChatInterface","messages","setMessages","inputText","setInputText","isLoading","setIsLoading","isListening","setIsListening","error","setError","messagesEndRef","speak","cancel","useSpeechSynthesis","initialMessage","id","text","sender","timestamp","Date","suggestions","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","sendMessage","trim","userMessage","now","toString","prev","response","botMessage","message","intent","confidence","console","errorMessage","handleVoiceInput","stopListening","transcript","startListening","handleSuggestionClick","suggestion","handleKeyPress","event","key","shiftKey","preventDefault","speakMessage","maxWidth","sx","height","display","flexDirection","py","children","elevation","flex","overflow","p","borderBottom","borderColor","bgcolor","color","variant","alignItems","gap","fileName","_jsxFileName","lineNumber","columnNumber","opacity","severity","onClose","m","map","div","initial","y","animate","exit","transition","duration","mb","width","borderRadius","position","whiteSpace","size","onClick","top","right","fontSize","mt","label","toFixed","toLocaleTimeString","length","container","spacing","index","item","cursor","justifyContent","ml","ref","borderTop","fullWidth","multiline","maxRows","value","onChange","e","target","onKeyPress","placeholder","disabled","textAlign"],"sources":["C:/Users/Lenovo/Downloads/New folder (3)/frontend/src/components/ChatInterface.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport {\r\n  Box,\r\n  Container,\r\n  Paper,\r\n  TextField,\r\n  IconButton,\r\n  Typography,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  Avatar,\r\n  Chip,\r\n  Fab,\r\n  CircularProgress,\r\n  Alert,\r\n  Button,\r\n  Grid\r\n} from '@mui/material';\r\nimport {\r\n  Send as SendIcon,\r\n  Mic as MicIcon,\r\n  MicOff as MicOffIcon,\r\n  SmartToy as BotIcon,\r\n  Person as PersonIcon,\r\n  VolumeUp as SpeakerIcon\r\n} from '@mui/icons-material';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\nimport ChatService from '../services/ChatService';\r\nimport VoiceService from '../services/VoiceService';\r\nimport './ChatInterface.css';\r\n\r\ninterface Message {\r\n  id: string;\r\n  text: string;\r\n  sender: 'user' | 'bot';\r\n  timestamp: Date;\r\n  suggestions?: string[];\r\n  intent?: string;\r\n  confidence?: number;\r\n}\r\n\r\nconst ChatInterface: React.FC = () => {\r\n  const [messages, setMessages] = useState<Message[]>([]);\r\n  const [inputText, setInputText] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isListening, setIsListening] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const messagesEndRef = useRef<HTMLDivElement>(null);\r\n  \r\n  const { speak, cancel } = useSpeechSynthesis();\r\n  \r\n  useEffect(() => {\r\n    // Initial greeting\r\n    const initialMessage: Message = {\r\n      id: '1',\r\n      text: \"Hello! I'm your Barclays Virtual Assistant. I can help you with account inquiries, transactions, appointments, and financial advice. How can I assist you today?\",\r\n      sender: 'bot',\r\n      timestamp: new Date(),\r\n      suggestions: [\r\n        \"Check my account balance\",\r\n        \"View recent transactions\", \r\n        \"Book an appointment\",\r\n        \"Get financial advice\"\r\n      ]\r\n    };\r\n    setMessages([initialMessage]);\r\n  }, []);\r\n  \r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [messages]);\r\n  \r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  };\r\n  \r\n  const sendMessage = async (text: string) => {\r\n    if (!text.trim()) return;\r\n    \r\n    const userMessage: Message = {\r\n      id: Date.now().toString(),\r\n      text: text.trim(),\r\n      sender: 'user',\r\n      timestamp: new Date()\r\n    };\r\n    \r\n    setMessages(prev => [...prev, userMessage]);\r\n    setInputText('');\r\n    setIsLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      const response = await ChatService.sendMessage(text);\r\n      \r\n      const botMessage: Message = {\r\n        id: (Date.now() + 1).toString(),\r\n        text: response.message,\r\n        sender: 'bot',\r\n        timestamp: new Date(),\r\n        suggestions: response.suggestions,\r\n        intent: response.intent,\r\n        confidence: response.confidence\r\n      };\r\n      \r\n      setMessages(prev => [...prev, botMessage]);\r\n      \r\n      // Text-to-speech for bot response\r\n      if (response.message) {\r\n        speak({ text: response.message });\r\n      }\r\n      \r\n    } catch (error) {\r\n      console.error('Error sending message:', error);\r\n      setError('Sorry, I encountered an error. Please try again.');\r\n      \r\n      const errorMessage: Message = {\r\n        id: (Date.now() + 1).toString(),\r\n        text: \"I'm sorry, I encountered an error processing your request. Please try again.\",\r\n        sender: 'bot',\r\n        timestamp: new Date()\r\n      };\r\n      \r\n      setMessages(prev => [...prev, errorMessage]);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n  \r\n  const handleVoiceInput = async () => {\r\n    if (isListening) {\r\n      VoiceService.stopListening();\r\n      setIsListening(false);\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      setIsListening(true);\r\n      const transcript = await VoiceService.startListening();\r\n      \r\n      if (transcript) {\r\n        await sendMessage(transcript);\r\n      }\r\n    } catch (error) {\r\n      console.error('Voice input error:', error);\r\n      setError('Voice input failed. Please try typing instead.');\r\n    } finally {\r\n      setIsListening(false);\r\n    }\r\n  };\r\n  \r\n  const handleSuggestionClick = (suggestion: string) => {\r\n    sendMessage(suggestion);\r\n  };\r\n  \r\n  const handleKeyPress = (event: React.KeyboardEvent) => {\r\n    if (event.key === 'Enter' && !event.shiftKey) {\r\n      event.preventDefault();\r\n      sendMessage(inputText);\r\n    }\r\n  };\r\n  \r\n  const speakMessage = (text: string) => {\r\n    cancel(); // Stop any current speech\r\n    speak({ text });\r\n  };\r\n  \r\n  return (\r\n    <Container maxWidth=\"md\" sx={{ height: '100vh', display: 'flex', flexDirection: 'column', py: 2 }}>\r\n      <Paper elevation={3} sx={{ flex: 1, display: 'flex', flexDirection: 'column', overflow: 'hidden' }}>\r\n        {/* Header */}\r\n        <Box sx={{ p: 2, borderBottom: 1, borderColor: 'divider', bgcolor: 'primary.main', color: 'white' }}>\r\n          <Typography variant=\"h6\" sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\r\n            <BotIcon />\r\n            Barclays Virtual Assistant\r\n          </Typography>\r\n          <Typography variant=\"body2\" sx={{ opacity: 0.8 }}>\r\n            Powered by AI • Available 24/7\r\n          </Typography>\r\n        </Box>\r\n        \r\n        {/* Error Alert */}\r\n        {error && (\r\n          <Alert severity=\"error\" onClose={() => setError(null)} sx={{ m: 1 }}>\r\n            {error}\r\n          </Alert>\r\n        )}\r\n        \r\n        {/* Messages */}\r\n        <Box sx={{ flex: 1, overflow: 'auto', p: 1 }}>\r\n          <List>\r\n            <AnimatePresence>\r\n              {messages.map((message) => (\r\n                <motion.div\r\n                  key={message.id}\r\n                  initial={{ opacity: 0, y: 20 }}\r\n                  animate={{ opacity: 1, y: 0 }}\r\n                  exit={{ opacity: 0, y: -20 }}\r\n                  transition={{ duration: 0.3 }}\r\n                >\r\n                  <ListItem\r\n                    sx={{\r\n                      flexDirection: 'column',\r\n                      alignItems: message.sender === 'user' ? 'flex-end' : 'flex-start',\r\n                      mb: 1\r\n                    }}\r\n                  >\r\n                    <Box\r\n                      sx={{\r\n                        display: 'flex',\r\n                        alignItems: 'flex-start',\r\n                        gap: 1,\r\n                        maxWidth: '80%',\r\n                        flexDirection: message.sender === 'user' ? 'row-reverse' : 'row'\r\n                      }}\r\n                    >\r\n                      <Avatar\r\n                        sx={{\r\n                          bgcolor: message.sender === 'user' ? 'secondary.main' : 'primary.main',\r\n                          width: 32,\r\n                          height: 32\r\n                        }}\r\n                      >\r\n                        {message.sender === 'user' ? <PersonIcon /> : <BotIcon />}\r\n                      </Avatar>\r\n                      \r\n                      <Paper\r\n                        elevation={1}\r\n                        sx={{\r\n                          p: 2,\r\n                          bgcolor: message.sender === 'user' ? 'secondary.light' : 'grey.100',\r\n                          borderRadius: 2,\r\n                          position: 'relative'\r\n                        }}\r\n                      >\r\n                        <Typography variant=\"body1\" sx={{ whiteSpace: 'pre-wrap' }}>\r\n                          {message.text}\r\n                        </Typography>\r\n                        \r\n                        {message.sender === 'bot' && (\r\n                          <IconButton\r\n                            size=\"small\"\r\n                            onClick={() => speakMessage(message.text)}\r\n                            sx={{ position: 'absolute', top: 4, right: 4 }}\r\n                          >\r\n                            <SpeakerIcon fontSize=\"small\" />\r\n                          </IconButton>\r\n                        )}\r\n                        \r\n                        {/* Intent and Confidence */}\r\n                        {message.intent && message.confidence && (\r\n                          <Box sx={{ mt: 1 }}>\r\n                            <Chip\r\n                              label={`${message.intent} (${(message.confidence * 100).toFixed(0)}%)`}\r\n                              size=\"small\"\r\n                              color={message.confidence > 0.7 ? 'success' : 'warning'}\r\n                            />\r\n                          </Box>\r\n                        )}\r\n                        \r\n                        <Typography variant=\"caption\" color=\"text.secondary\" sx={{ display: 'block', mt: 0.5 }}>\r\n                          {message.timestamp.toLocaleTimeString()}\r\n                        </Typography>\r\n                      </Paper>\r\n                    </Box>\r\n                    \r\n                    {/* Suggestions */}\r\n                    {message.suggestions && message.suggestions.length > 0 && (\r\n                      <Box sx={{ mt: 1, maxWidth: '80%' }}>\r\n                        <Typography variant=\"caption\" color=\"text.secondary\" sx={{ mb: 1, display: 'block' }}>\r\n                          Quick suggestions:\r\n                        </Typography>\r\n                        <Grid container spacing={0.5}>\r\n                          {message.suggestions.map((suggestion, index) => (\r\n                            <Grid item key={index}>\r\n                              <Chip\r\n                                label={suggestion}\r\n                                size=\"small\"\r\n                                onClick={() => handleSuggestionClick(suggestion)}\r\n                                sx={{ cursor: 'pointer' }}\r\n                                variant=\"outlined\"\r\n                              />\r\n                            </Grid>\r\n                          ))}\r\n                        </Grid>\r\n                      </Box>\r\n                    )}\r\n                  </ListItem>\r\n                </motion.div>\r\n              ))}\r\n            </AnimatePresence>\r\n            \r\n            {/* Loading indicator */}\r\n            {isLoading && (\r\n              <ListItem sx={{ justifyContent: 'center' }}>\r\n                <CircularProgress size={24} />\r\n                <Typography variant=\"body2\" sx={{ ml: 1 }}>\r\n                  Assistant is typing...\r\n                </Typography>\r\n              </ListItem>\r\n            )}\r\n            \r\n            <div ref={messagesEndRef} />\r\n          </List>\r\n        </Box>\r\n        \r\n        {/* Input */}\r\n        <Box sx={{ p: 2, borderTop: 1, borderColor: 'divider' }}>\r\n          <Box sx={{ display: 'flex', gap: 1, alignItems: 'flex-end' }}>\r\n            <TextField\r\n              fullWidth\r\n              multiline\r\n              maxRows={4}\r\n              value={inputText}\r\n              onChange={(e) => setInputText(e.target.value)}\r\n              onKeyPress={handleKeyPress}\r\n              placeholder=\"Type your message or ask about your account...\"\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              disabled={isLoading}\r\n            />\r\n            \r\n            <IconButton\r\n              color=\"primary\"\r\n              onClick={() => sendMessage(inputText)}\r\n              disabled={!inputText.trim() || isLoading}\r\n            >\r\n              <SendIcon />\r\n            </IconButton>\r\n            \r\n            <Fab\r\n              size=\"small\"\r\n              color={isListening ? \"secondary\" : \"primary\"}\r\n              onClick={handleVoiceInput}\r\n              disabled={isLoading}\r\n            >\r\n              {isListening ? <MicOffIcon /> : <MicIcon />}\r\n            </Fab>\r\n          </Box>\r\n          \r\n          {isListening && (\r\n            <Typography variant=\"caption\" color=\"secondary\" sx={{ mt: 1, display: 'block', textAlign: 'center' }}>\r\n              🎤 Listening... Click mic to stop\r\n            </Typography>\r\n          )}\r\n        </Box>\r\n      </Paper>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ChatInterface;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}